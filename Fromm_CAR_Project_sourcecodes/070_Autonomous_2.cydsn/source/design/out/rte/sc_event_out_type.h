
/*
 * Filename: sc_event_out_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 *
 * Description: Event from application to remote
 */

#ifndef _H_DEFINE_SC_EVENT_OUT_TYPE
#define _H_DEFINE_SC_EVENT_OUT_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SC_EVENT_OUT_INCLUDES */

#include "sc_protocol_type.h"
    
/* USER CODE END SC_EVENT_OUT_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_EVENT_OUT signal    
 **********************************************************************/

/* USER CODE START SC_EVENT_OUT_USERDEFINITIONS */
typedef enum {

	/* Default */
	EV_OUT_NONE,
	
	/* Connection */
	EV_OUT_ACK_PRESENT,
	EV_OUT_ACK_CONNECT,
	EV_OUT_ACK_DISCONNECT,

    //List of features present on car
	EV_OUT_FEATURELIST,

    //General purpose Information protocol - to be implemented later
	EV_OUT_INFO,


} EVENT_out_t;

#define EVENT_PAYLOADSIZE PROTOCOL_PAYLOAD_SIZE

/* USER CODE END SC_EVENT_OUT_USERDEFINITIONS */

typedef 
/* USER CODE START SC_EVENT_OUT_SIGNALDATADEFINITION */
struct
{
    EVENT_out_t m_ev;
    uint8_t m_lengthPayload;
    uint8_t m_payload[EVENT_PAYLOADSIZE];
} 
/* USER CODE END SC_EVENT_OUT_SIGNALDATADEFINITION */
SC_EVENT_OUT_data_t;

/* USER CODE START InitSC_EVENT_OUT */

#define SC_EVENT_OUT_INIT_DATA ((SC_EVENT_OUT_data_t){})
/* USER CODE END InitSC_EVENT_OUT */





/* USER CODE START SC_EVENT_OUT_USERFUNCTIONS */

/* USER CODE END SC_EVENT_OUT_USERFUNCTIONS */


#endif