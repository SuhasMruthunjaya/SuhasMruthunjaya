/*
 * Signal_Speed_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 */



#ifndef SIGNAL_SPEED_TYPE_H_
#define SIGNAL_SPEED_TYPE_H_

#include "global.h"

/*****************************************************************************************
 *************** Type Definition for SIGNAL_SPEED signal                     **************************
 *****************************************************************************************/



typedef struct
{
    float m_vy;      /**< \brief     forward speed in m/s */
    float m_vphi;    /**< \brief     rotation speed in deg/s */
} SIGNAL_SPEED_data_t;


#define SIGNAL_SPEED_INIT_DATA ((SIGNAL_SPEED_data_t){0,0})


/**
 * Default IN driver API - may be deleted if not required
 * \param SIGNAL_SPEED_data_t *const data : [OUT] scaled data read from the driver
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SIGNAL_SPEED_driverIn(SIGNAL_SPEED_data_t *const data);


/**
 * Default IN driver API - may be deleted if not required
 * \param const SIGNAL_SPEED_data_t  *const data : [IN] signal data for the driver, will be scaled in this function
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SIGNAL_SPEED_driverOut(const SIGNAL_SPEED_data_t  *const data);



#endif /* SIGNAL_SPEED_TYPE_H_ */

