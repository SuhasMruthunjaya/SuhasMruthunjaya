/*
 * Signal_Decoder_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 */



#ifndef SIGNAL_DECODER_TYPE_H_
#define SIGNAL_DECODER_TYPE_H_

#include "global.h"

/*****************************************************************************************
 *************** Type Definition for SIGNAL_DECODER signal                     **************************
 *****************************************************************************************/



typedef struct
{
    uint8_t dummy;          /**< \brief to be added later */
} SIGNAL_DECODER_data_t;

#define SIGNAL_DECODER_INIT_DATA ((SIGNAL_DECODER_data_t){0})


/**
 * Default IN driver API - may be deleted if not required
 * \param SIGNAL_DECODER_data_t *const data : [OUT] scaled data read from the driver
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SIGNAL_DECODER_driverIn(SIGNAL_DECODER_data_t *const data);


/**
 * Default IN driver API - may be deleted if not required
 * \param const SIGNAL_DECODER_data_t  *const data : [IN] signal data for the driver, will be scaled in this function
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SIGNAL_DECODER_driverOut(const SIGNAL_DECODER_data_t  *const data);



#endif /* SIGNAL_DECODER_TYPE_H_ */

