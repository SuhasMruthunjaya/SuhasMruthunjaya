
/*
 * Filename: sc_enginespeed_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 *
 * Description: The engine speed record in RPM per engine. Used for controlspeed and currentspeed
 */

#ifndef _H_DEFINE_SC_ENGINESPEED_TYPE
#define _H_DEFINE_SC_ENGINESPEED_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SC_ENGINESPEED_INCLUDES */

/* USER CODE END SC_ENGINESPEED_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_ENGINESPEED signal    
 **********************************************************************/

/* USER CODE START SC_ENGINESPEED_USERDEFINITIONS */

/* USER CODE END SC_ENGINESPEED_USERDEFINITIONS */

typedef 
/* USER CODE START SC_ENGINESPEED_SIGNALDATADEFINITION */
struct
{
	sint16_t m_rpm_fl;
    sint16_t m_rpm_fr;
    sint16_t m_rpm_rl;
    sint16_t m_rpm_rr;
} 
/* USER CODE END SC_ENGINESPEED_SIGNALDATADEFINITION */
SC_ENGINESPEED_data_t;

/* USER CODE START InitSC_ENGINESPEED */
#define SC_ENGINESPEED_INIT_DATA ((SC_ENGINESPEED_data_t){0,0,0,0})
/* USER CODE END InitSC_ENGINESPEED */


/**
 * Default IN driver API
 * \param SC_ENGINESPEED_data_t *const data : [OUT] scaled data read from the driver
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SC_ENGINESPEED_driverIn(SC_ENGINESPEED_data_t *const data);



/**
 * Default OUT driver API
 * \param const SC_ENGINESPEED_data_t  *const data : [IN] signal data for the driver, will be scaled in this function
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SC_ENGINESPEED_driverOut(const SC_ENGINESPEED_data_t  *const data);


/* USER CODE START SC_ENGINESPEED_USERFUNCTIONS */

/* USER CODE END SC_ENGINESPEED_USERFUNCTIONS */


#endif