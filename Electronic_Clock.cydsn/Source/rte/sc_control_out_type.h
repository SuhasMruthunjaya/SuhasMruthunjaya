
/*
 * Filename: sc_control_out_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 *
 * Description: Signal Class for SO_Control_Out (which consists of statemachine output, that is nothing but data of the minute and hour widget given for the display_runnable)
 */

#ifndef _H_DEFINE_SC_CONTROL_OUT_TYPE
#define _H_DEFINE_SC_CONTROL_OUT_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"


/* USER CODE START SC_CONTROL_OUT_INCLUDES */

/* USER CODE END SC_CONTROL_OUT_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_CONTROL_OUT signal    
 **********************************************************************/

/* USER CODE START SC_CONTROL_OUT_USERDEFINITIONS */
    
    typedef struct
    {
        uint8_t Hour;
        uint8_t Minute;
        
    }CLOCK_time_t;
    
    
    typedef enum
    {
        DISPLAYING_MODE,
        EDITING_MODE_HOUR,
        EDITING_MODE_MINUTE
        
    }CLOCK_MODE_t;
   
    #define Hour_Maximum 23
    #define Minute_Maximum 59
    
    #define CLOCK_time_INIT_DATA ((CLOCK_time_t){0,0})

/* USER CODE END SC_CONTROL_OUT_USERDEFINITIONS */

typedef 
/* USER CODE START SC_CONTROL_OUT_SIGNALDATADEFINITION */
struct
{
	//#error "Provide your data structure"
    CLOCK_time_t time;
    CLOCK_MODE_t mode;
} 
/* USER CODE END SC_CONTROL_OUT_SIGNALDATADEFINITION */
SC_CONTROL_OUT_data_t;

/* USER CODE START InitSC_CONTROL_OUT */
//#error "Provide a sensible init value"
#define SC_CONTROL_OUT_INIT_DATA ((SC_CONTROL_OUT_data_t){{0,0},DISPLAYING_MODE})
/* USER CODE END InitSC_CONTROL_OUT */





/* USER CODE START SC_CONTROL_OUT_USERFUNCTIONS */

/* USER CODE END SC_CONTROL_OUT_USERFUNCTIONS */


#endif