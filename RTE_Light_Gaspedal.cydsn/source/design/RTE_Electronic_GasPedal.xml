<?xml version="1.0" encoding="utf-8"?>
<rte>
 <configset>
  <config name="version" value="Erika 2"/>
  <config name="path_out" value="{PROJECT_PATH}\out"/>
  <config name="templateDir" value="{GEN_PATH}\..\templates\erika"/>
  <config name="userCodeStart" value="/\* USER CODE START {TAG} \*/"/>
  <config name="userCodeEnd" value="/\* USER CODE END {TAG} \*/"/>
  <config name="guivers" value="0.1.2"/>
 </configset>
 <naming>
  <config name="signalpoolPrefix" value="sp_"/>
  <config name="signalpoolPostfix" value=""/>
  <config name="taskPrefix" value="tsk_"/>
  <config name="taskPostfix" value=""/>
  <config name="signalclassPrefix" value="sc_"/>
  <config name="signalclassPostfix" value=""/>
  <config name="signalobjectPrefix" value="so_"/>
  <config name="signalobjectPostfix" value=""/>
  <config name="swcPrefix" value="swc_"/>
  <config name="swcPostfix" value=""/>
  <config name="runnablePrefix" value=""/>
  <config name="runnablePostfix" value="_run"/>
  <config name="eventPrefix" value="ev_"/>
  <config name="eventPostfix" value=""/>
  <config name="resourcePrefix" value="res_"/>
  <config name="resourcePostfix" value=""/>
  <config name="addrPrefix" value="ADR_"/>
  <config name="addrStartPostfix" value="_START"/>
  <config name="addrEndPostfix" value="_END"/>
 </naming>
 <signalpools>
  <signalpool description="The common global signal pool. All signals will be stored here" endaddr="ADR_SP_COMMON_END" name="sp_common" shortname="common" startaddr="ADR_SP_COMMON_START"/>
 </signalpools>
 <tasks>
  <task description="This task will contain all real time operations, e.g: joystick, control, Engine and Brake" events="ev_joystick_onData|ev_engine_speed_onData|ev_1ms" mode="Cyclic and Event" name="tsk_realtime" shortname="realtime" signalpoolsRO="sp_common" signalpoolsRW="sp_common" tickEvent="ev_1ms" timertickperiod="1"/>
  <task description="For the age incrementation" events="" mode="Cyclic" name="tsk_system" shortname="system" signalpoolsRO="sp_common" signalpoolsRW="sp_common" tickEvent="0" timertickperiod="1"/>
 </tasks>
 <signalclasses>
  <signalclass description="joystick representation" name="sc_joystick" shortname="joystick"/>
  <signalclass description="Calculated speed from the incoming joystick signal" name="sc_speed" shortname="speed"/>
  <signalclass description="The PWM Output signal to represent engine speed, for the RGB lead" name="sc_pwm" shortname="pwm"/>
  <signalclass description="breaklight representing the breaks" name="sc_brakelight" shortname="brakelight"/>
 </signalclasses>
 <signalobjects>
  <signalobject description="Joystick x,y for controlling the engine speed " indriver="default" name="so_joystick" onDataError="0" onDataUpdate="ev_joystick_onData" outdriver="0" resource="None" shortname="joystick" signalclass="sc_joystick" signalpool="sp_common"/>
  <signalobject description="Speed calculated from the joystick x.y inputs" indriver="0" name="so_engine_speed" onDataError="0" onDataUpdate="ev_engine_speed_onData" outdriver="0" resource="None" shortname="engine_speed" signalclass="sc_speed" signalpool="sp_common"/>
  <signalobject description="The PWM signal output from the setspeed runnable which drives the RGB Led" indriver="0" name="so_rgb_led" onDataError="0" onDataUpdate="0" outdriver="default" resource="None" shortname="rgb_led" signalclass="sc_pwm" signalpool="sp_common"/>
  <signalobject description="The GPIO output coming from setbreaklight runnable which drives the Red LED." indriver="0" name="so_breaklight" onDataError="0" onDataUpdate="0" outdriver="default" resource="None" shortname="breaklight" signalclass="sc_brakelight" signalpool="sp_common"/>
 </signalobjects>
 <swcs>
  <swc description="Recieve Analog signals from the Joystick hardware and send out the joystick commands (XY coordinates)" name="swc_joystick" shortname="joystick"/>
  <swc description="To calculate the engine speed from the incoming joystick commands" name="swc_control" shortname="control"/>
  <swc description="Set the RGB Led brightness based on the engine speed" name="swc_engine" shortname="engine"/>
  <swc description="Based on engine speed, set the Red LED." name="swc_brake" shortname="brake"/>
  <swc description="Age incrementation Runnable" name="swc_age" shortname="age"/>
 </swcs>
 <runnables>
  <runnable component="swc_joystick" cycletime="10" description="Joystick representing Runnable" events="" name="JOYSTICK_readJoystick_run" shortname="readJoystick" signalIN="" signalOUT="so_joystick" task="tsk_realtime"/>
  <runnable component="swc_control" cycletime="0" description="Control representing Runnable" events="ev_joystick_onData" name="CONTROL_calcControl_run" shortname="calcControl" signalIN="so_joystick" signalOUT="so_engine_speed" task="tsk_realtime"/>
  <runnable component="swc_engine" cycletime="100" description="Engine representing Runnable" events="" name="ENGINE_setEngine_run" shortname="setEngine" signalIN="so_engine_speed" signalOUT="so_rgb_led" task="tsk_realtime"/>
  <runnable component="swc_brake" cycletime="0" description="Breake representing Runnable" events="ev_engine_speed_onData" name="BRAKE_setBrakeLight_run" shortname="setBrakeLight" signalIN="so_engine_speed" signalOUT="so_breaklight" task="tsk_realtime"/>
  <runnable component="swc_age" cycletime="1" description="Runnable" events="" name="AGE_incAge_run" shortname="incAge" signalIN="so_joystick|so_engine_speed|so_rgb_led|so_breaklight" signalOUT="so_joystick|so_engine_speed|so_rgb_led|so_breaklight" task="tsk_system"/>
 </runnables>
 <events>
  <event description="A Event" name="ev_joystick_onData" shortname="joystick_onData"/>
  <event description="A Event" name="ev_engine_speed_onData" shortname="engine_speed_onData"/>
  <event description="A Event" name="ev_1ms" shortname="1ms"/>
 </events>
 <resources/>
</rte>
